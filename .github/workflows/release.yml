# Copyright 2020 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    branches: [ main ]

jobs:

  build:
    name: Release
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.19

    - name: Check out code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Install go cover
      run: go install golang.org/x/tools/cmd/cover@latest

    - name: Fix apt-get state
      run: sudo apt-get update

    - name: Install apt packages
      run: sudo apt-get install libasound2-dev jq

    - name: Set up CodeClimate env
      run: |
        echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV

    - name: Prepare CodeClimate
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        curl -LSs 'https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64' >./cc-test-reporter;
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build

    - name: Run tests
      env:
        CI: true
      run: ./test.sh

    - name: Upload coverage
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        ./cc-test-reporter after-build --prefix 'barista.run/'

    - name: Build binaries
      env:
        GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
        GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        OWM_API_KEY: ${{ secrets.OWM_API_KEY }}
      run: |
        ./build.sh -tags prod -o sample-bar ./samples/sample-bar
        go build -o i3status ./samples/i3status

    - name: Prepare release tag
      run: |
        git config credential.helper "store --file=.gitcredentials"
        echo "https://${{ secrets.DROID_GITHUB_TOKEN }}:@github.com" > .gitcredentials
        git push --delete origin "autorelease" || true

    - name: Create Release
      uses: ncipollo/release-action@v1.11.2
      with:
        allowUpdates: true
        artifacts: './i3status,./sample-bar'
        artifactContentType: application/binary
        body: Automated build of samples/sample-bar and samples/i3status
        name: Samples
        tag: autorelease
        token: ${{ secrets.DROID_GITHUB_TOKEN }}
